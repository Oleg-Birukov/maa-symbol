$bg_color: rgb(79, 0, 128);
$sym_padding: 25px;
$sym_size: 780px;
$sym_total_size: $sym_padding + $sym_size;
$duration: 57s;
$dur_divider: 20;

@import url(normalize.css);

@font-face {
	font-family: Gabriola;
	src: url("/fonts/Gabriola.ttf") format("truetype");
}

body {
	// background-color: $bg_color;
	background-image: radial-gradient(
		closest-corner,
		$bg_color,
		$bg_color,
		rgb(51, 1, 59)
	);
	overflow: hidden;
}

.container {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100vw;
	height: 100vh;
	overflow: hidden;
	// background-color: brown;
}

.symbol {
	position: relative;
	width: $sym_total_size;
	height: $sym_total_size;
	padding: $sym_padding;
	display: flex;
	justify-content: center;
	align-items: center;
	// background-color: cornflowerblue;

	@media (max-width: $sym_total_size), (max-height: $sym_total_size) {
		width: min(100vh, 100vw);
		height: min(100vh, 100vw);
	}

	animation: symbol-rot $duration infinite linear reverse;

	@keyframes symbol-rot {
		from {
			transform: rotate(0deg);
		}

		to {
			transform: rotate(360deg);
		}
	}
}

@mixin dbl_border($min, $max, $color) {
	// border: calc(4px + ((10 - 4)*((min(100vw, 100vh) - 320px)/(805 - 320)))) solid $color;
	border: calc(
			$min + ($max/1px - $min/1px) *
				(((min(100vw, 100vh) - 320px)) / ($sym_total_size/1px - 320))
		)
		solid $color;
	box-shadow: inset 0px 0px 0px
			calc(
				$min + ($max/1px - $min/1px) *
					(((min(100vw, 100vh) - 320px)) / ($sym_total_size/1px - 320))
			)
			$bg_color,
		inset 0px 0px 0px
			calc(
				(
						$min + ($max/1px - $min/1px) *
							(((min(100vw, 100vh) - 320px)) / ($sym_total_size/1px - 320))
					) * 2
			)
			$color;
}

@mixin std_border {
	border: 10px solid goldenrod;
	box-shadow: inset 0px 0px 0px 10px $bg_color, inset 0px 0px 0px 20px goldenrod;
}

@mixin proportional_length($prop, $min, $max) {
	#{$prop}: calc(
		$min + ($max/1px - $min/1px) *
			(((min(100vw, 100vh) - 320px)) / ($sym_total_size/1px - 320))
	);
}

@mixin b-shadow($blr_min, $blr_max, $exp_min, $exp_max, $color) {
	box-shadow: 0 0
			calc(
				$blr_min + ($blr_max/1px - $blr_min/1px) *
					(((min(100vw, 100vh) - 320px)) / ($sym_total_size/1px - 320))
			)
			calc(
				$exp_min + ($exp_max/1px - $exp_min/1px) *
					(((min(100vw, 100vh) - 320px)) / ($sym_total_size/1px - 320))
			)
			$color,
		inset 0 0 0 2px goldenrod;
}

.external-circle {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
	border-radius: 50%;
	// z-index: 10000;
	@include std_border();

	$blr_max: 21px;
	$exp_max: 15px;
	&:after {
		content: "";
		position: absolute;
		height: 102.6%;
		width: 102.6%;
		// background-color: bisque;
		border-radius: 50%;
		// box-shadow: 0 0 $blr_max $exp_max rgb(252, 201, 73),
		// 	inset 0 0 0 30px red;

		animation: ext-circle-glow calc($duration / $dur_divider) infinite alternate
			ease-in-out;

		@keyframes ext-circle-glow {
			from {
				box-shadow: 0 0 $blr_max $exp_max rgb(252, 201, 73),
					inset 0 0 0 2px goldenrod;
			}

			to {
				box-shadow: 0 0 $blr_max * 1.5 $exp_max * 1.5 rgb(252, 201, 73),
					inset 0 0 0 2px goldenrod;
			}
		}
	}

	@media (max-width: $sym_total_size), (max-height: $sym_total_size) {
		@include dbl_border(4px, 10px, goldenrod);
		&:after {
			$blr_min: 15px;
			$exp_min: 8px;
			// @include b-shadow(15px, $blr_max, 8px, $exp_max, rgb(252, 201, 73));

			@keyframes ext-circle-glow {
				from {
					@include b-shadow(
						$blr_min,
						$blr_max,
						$exp_min,
						$exp_max,
						rgb(252, 201, 73)
					);
				}

				to {
					@include b-shadow(
						$blr_min * 1.5,
						$blr_max * 1.5,
						$exp_min * 1.5,
						$exp_max * 1.5,
						rgb(252, 201, 73)
					);
				}
			}
		}
	}
}

.ext-petals-container {
	$sz: 95%;

	position: absolute;
	// box-sizing: content-box;
	width: $sz;
	height: $sz;
	display: flex;
	justify-content: center;
	align-items: center;
	// background-color: aqua;
	transform: rotate(15deg);
}

@mixin brd_element($element, $min, $max, $color) {
	border-#{$element}: calc(
			$min + ($max/1px - $min/1px) *
				(((min(100vw, 100vh) - 320px)) / ($sym_total_size/1px - 320))
		)
		solid $color;
}

.ext-petal {
	position: absolute;
	display: flex;
	justify-content: center;
	$w: 154px;
	$bd-t: 122px;
	$l-r-min: 13px;
	$l-r-max: 32px;
	$t-b-min: 44px;
	$t-b-max: 74px;
	width: $w;
	border-top: $bd-t solid var(--clr);
	border-left: $l-r-max solid transparent;
	border-right: $l-r-max solid transparent;
	inset: $t-b-max auto;
	transform: rotate(calc(var(--i) * 30deg));

	$a-w: 154px;
	$a-h: 40px;
	$a-t: -160.5px;
	&::after {
		content: "";
		position: absolute;
		width: $a-w;
		height: $a-h;
		top: $a-t;
		background-color: var(--clr);
		border-radius: 50% 50% 0 0 / 100% 100% 0 0;
	}

	// --- Text ---
	// Qualities names
	$s-t: -108px;
	$s-fz: 34px;

	> span {
		position: absolute;
		top: $s-t;
		display: flex;
		font-family: Gabriola;
		font-size: $s-fz;
		color: var(--txt-clr);
		z-index: 1;
		transform: rotate(calc(var(--i) * -30deg - 15deg));

		animation: text-rot $duration infinite linear;

		@keyframes text-rot {
			from {
				transform: rotate(calc(var(--i) * -30deg - 15deg));
			}

			to {
				transform: rotate(calc(var(--i) * -30deg - 15deg + 360deg));
			}
		}
	}

	@media (max-width: $sym_total_size), (max-height: $sym_total_size) {
		@include proportional_length(width, 55.5px, $w);
		@include brd_element(top, 47px, $bd-t, var(--clr));
		@include brd_element(left, $l-r-min, $l-r-max, transparent);
		@include brd_element(right, $l-r-min, $l-r-max, transparent);
		@include proportional_length(top, $t-b-min, $t-b-max);
		@include proportional_length(bottom, $t-b-min, $t-b-max);

		&::after {
			@include proportional_length(width, 55px, $a-w);
			@include proportional_length(height, 16px, $a-h);
			@include proportional_length(top, -62px, $a-t);
		}

		> span {
			@include proportional_length(top, -40px, $s-t);
			@include proportional_length(font-size, 12px, $s-fz);
		}
	}
}

.mid-circle {
	$w-h: 385px;
	position: absolute;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 50%;
	width: $w-h;
	height: $w-h;
	@include std_border();
	z-index: 4;

	$blr_max: 26px;
	$exp_max: 15px;
	&::after {
		content: "";
		position: absolute;
		height: 384.9px;
		width: 384.9px;
		display: flex;
		border-radius: 50%;
		// box-shadow: 0 0 $blr_max $exp_max white;

		animation: mid-circle-glow calc($duration / $dur_divider) infinite alternate
			ease-in-out;

		@keyframes mid-circle-glow {
			from {
				box-shadow: 0 0 $blr_max $exp_max white;
			}

			to {
				box-shadow: 0 0 $blr_max * 1.5 $exp_max * 1.5 white;
			}
		}
	}

	@media (max-width: $sym_total_size), (max-height: $sym_total_size) {
		@include dbl_border(4px, 10px, goldenrod);
		@include proportional_length(width, 127.2px, $w-h);
		@include proportional_length(height, 127.2px, $w-h);

		&::after {
			$blr_min: 15px;
			$exp_min: 8px;
			@include proportional_length(height, 127px, 384px);
			@include proportional_length(width, 127px, 384px);
			// @include b-shadow(15px, $blr_max, 8px, $exp_max, white);

			@keyframes mid-circle-glow {
				from {
					// box-shadow: 0 0 $blr_min $exp_min white;
					@include b-shadow($blr_min, $blr_max, $exp_min, $exp_max, white);
				}

				to {
					// box-shadow: 0 0 $blr_min * 1.5 $exp_min * 1.5 white;
					@include b-shadow(
						$blr_min * 1.5,
						$blr_max * 1.5,
						$exp_min * 1.5,
						$exp_max * 1.5,
						white
					);
				}
			}
		}
	}
}

.int-petals-container {
	position: absolute;
	box-sizing: content-box;
	width: 36%;
	height: 36%;
	display: flex;
	justify-content: center;
	align-items: center;
	// z-index: 3;
}

.int-petal {
	position: absolute;
	display: flex;
	justify-content: center;
	box-sizing: content-box;

	$w: 75px;
	$w-min: 23.9px;
	$bd-t: 58px;
	$bd-t-min: 17px;
	$l-r-min: 17.1px;
	$l-r-max: 58px;
	$t-b-min: 26px;
	$t-b-max: 41px;

	width: $w;
	border-top: $bd-t solid var(--clr);
	border-left: $l-r-max solid transparent;
	border-right: $l-r-max solid transparent;
	inset: $t-b-max auto;
	transform: rotate(calc(var(--i) * 90deg));

	$a-w: 198px;
	$a-h: 65px;
	$a-t: -117px;

	&::after {
		content: "";
		position: absolute;
		width: $a-w;
		height: $a-h;
		// left: -59.6px;
		top: $a-t;
		background-color: var(--clr);
		border-radius: 110% 110% 15% 15% / 150% 150% 65% 65%;
	}
	// &::before {
	// 	content: "";
	// 	position: absolute;
	// 	width: 84px;
	// 	height: 32px;
	// 	// left: -9px;
	// 	top: -12px;
	// 	background-color: $bg_color;
	// 	border-radius: 50% 50% 0 0 / 100% 100% 0 0;
	// }

	// --- Text ---
	// Aspects names
	$ss-t: -89px;
	$s-fz: 37px;

	> span {
		position: absolute;
		display: flex;
		top: $ss-t;
		// left: -14px;
		font-family: Gabriola;
		font-size: $s-fz;
		color: var(--txt-clr);
		z-index: 100;
	}

	@media (max-width: $sym_total_size), (max-height: $sym_total_size) {
		@include proportional_length(width, $w-min, $w);
		@include brd_element(top, $bd-t-min, $bd-t, var(--clr));
		@include brd_element(left, $l-r-min, $l-r-max, transparent);
		@include brd_element(right, $l-r-min, $l-r-max, transparent);
		@include proportional_length(top, $t-b-min, $t-b-max);
		@include proportional_length(bottom, $t-b-min, $t-b-max);

		&::after {
			@include proportional_length(width, 61px, $a-w);
			@include proportional_length(height, 22px, $a-h);
			@include proportional_length(top, -37.5px, $a-t);
		}

		> span {
			@include proportional_length(top, -27px, $ss-t);
			@include proportional_length(font-size, 11px, $s-fz);
		}
	}
}

.internal-circle {
	position: absolute;
	box-sizing: border-box;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 50%;
	width: 118.3px;
	height: 118.3px;
	background-color: white;
	@include std_border();
	z-index: 500;

	$blr_max: 34px;
	$exp_max: 31px;
	&::after {
		content: "";
		position: absolute;
		height: 119%;
		width: 119%;
		border-radius: 50%;
		// box-shadow: 0 0 $blr_max $exp_max white;

		animation: int-circle-glow calc($duration / $dur_divider) infinite alternate
			ease-in-out;

		@keyframes int-circle-glow {
			from {
				box-shadow: 0 0 $blr_max $exp_max white;
			}

			to {
				box-shadow: 0 0 $blr_max * 1.5 $exp_max * 1.5 white;
			}
		}
	}
	@media (max-width: $sym_total_size), (max-height: $sym_total_size) {
		@include dbl_border(4px, 10px, goldenrod);
		@include proportional_length(width, 39.7px, 118.3px);
		@include proportional_length(height, 39.7px, 118.3px);

		&:after {
			$blr_min: 15px;
			$exp_min: 13px;
			// @include b-shadow(15px, $blr_max, 13px, $exp_max, white);

			@keyframes int-circle-glow {
				from {
					// box-shadow: 0 0 $blr_min $exp_min white;
					@include b-shadow($blr_min, $blr_max, $exp_min, $exp_max, white);
				}

				to {
					// box-shadow: 0 0 $blr_min * 1.5 $exp_min * 1.5 white;
					@include b-shadow(
						$blr_min * 1.5,
						$blr_max * 1.5,
						$exp_min * 1.5,
						$exp_max * 1.5,
						white
					);
				}
			}
		}
	}
}
